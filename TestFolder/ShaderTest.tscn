[gd_scene load_steps=27 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]
[ext_resource path="res://TestFolder/Sprite2.gd" type="Script" id=2]
[ext_resource path="res://TestFolder/ShaderTest.gd" type="Script" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 color: hint_color;

void fragment() {
	vec4 pixelColor = texture(TEXTURE, UV);
	float brightness = (pixelColor.r + pixelColor.g + pixelColor.b) / 3.0;
	vec4 grayScale = vec4(brightness, brightness, brightness, pixelColor.a);
	COLOR = grayScale * color;
	
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/color = Color( 1, 0, 0, 1 )

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item; 

uniform vec4 color : hint_color;
uniform float flashState : hint_range(0,1) = 0.5;

void fragment() {
	vec4 pixelColor = texture(TEXTURE, UV);
	COLOR = mix(pixelColor, color, flashState);
	COLOR.a *= pixelColor.a;
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/color = null
shader_param/flashState = 0.5

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

void fragment() {
	vec4 pixelColor = texture(TEXTURE, UV);
	COLOR = pixelColor;
	COLOR.rgb = COLOR.gbr;
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

uniform sampler2D texture2;
uniform sampler2D colorTexture;
uniform vec2 scroll1 = vec2(0.1, 0.1);
uniform vec2 scroll2 = vec2(0.2, 0.2);

void fragment() {
	float textureColor1 = texture(TEXTURE, UV + scroll1 * TIME).r;
	float textureColor2 = texture(TEXTURE, UV + scroll2 * TIME).r;
	float energy = textureColor1 * textureColor2;
	vec4 color = texture(colorTexture, vec2(energy));
	COLOR = vec4 (energy, energy, energy, 1);
	
}"

[sub_resource type="Gradient" id=8]
interpolation_mode = 2
offsets = PoolRealArray( 0, 0.180645, 0.309677, 0.470968, 1 )
colors = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0.977539, 0.766313, 0.0687332, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=9]
gradient = SubResource( 8 )

[sub_resource type="OpenSimplexNoise" id=10]

[sub_resource type="NoiseTexture" id=11]
seamless = true
noise = SubResource( 10 )

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 7 )
shader_param/scroll1 = Vector2( 0.1, 0.1 )
shader_param/scroll2 = Vector2( 0.2, 0.2 )
shader_param/texture2 = SubResource( 11 )
shader_param/colorTexture = SubResource( 9 )

[sub_resource type="OpenSimplexNoise" id=13]
period = 192.0
persistence = 0.396

[sub_resource type="NoiseTexture" id=14]
seamless = true
noise = SubResource( 13 )

[sub_resource type="Animation" id=19]
resource_name = "New Anim"
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite2:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 421, 270 ), Vector2( 600, 270 ) ]
}

[sub_resource type="Animation" id=15]
resource_name = "Pulse"
tracks/0/type = "value"
tracks/0/path = NodePath("CanvasLayer/Shockwave:material:shader_param/force")
tracks/0/interp = 1
tracks/0/loop_wrap = false
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.7 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.04, 0.01 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CanvasLayer/Shockwave:material:shader_param/size")
tracks/1/interp = 1
tracks/1/loop_wrap = false
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.7 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}

[sub_resource type="Animation" id=16]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("CanvasLayer/Shockwave:material:shader_param/force")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.01 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CanvasLayer/Shockwave:material:shader_param/size")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.5 ]
}

[sub_resource type="Shader" id=17]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform vec2 center;
uniform float force;
uniform float size;
uniform float thickness;
uniform float offset;

void fragment() {
	float ratio = SCREEN_PIXEL_SIZE.x / SCREEN_PIXEL_SIZE.y;
	vec2 scaledUV = ( SCREEN_UV - vec2(0.5, 0.0) ) / vec2(ratio, 1.0) + vec2(0.5, 0.0);
	float mask = (1.0 - smoothstep(size - 0.1, size, length(scaledUV - center))) *
			smoothstep(size - thickness-0.1, size-thickness, length(scaledUV - center));
	vec2 disp = normalize(UV - center) * force * mask;
	COLOR = texture(SCREEN_TEXTURE, SCREEN_UV - disp);
	COLOR.rgb = vec3(mask);
	COLOR.r = texture(SCREEN_TEXTURE,vec2(SCREEN_UV.x + offset, SCREEN_UV.y) - disp).r;
	COLOR.g = texture(SCREEN_TEXTURE,SCREEN_UV - disp).g;
	COLOR.b = texture(SCREEN_TEXTURE,vec2(SCREEN_UV.x - offset, SCREEN_UV.y) - disp).b;
	
	
}
"

[sub_resource type="ShaderMaterial" id=18]
resource_local_to_scene = true
shader = SubResource( 17 )
shader_param/center = Vector2( 0.5, 0.5 )
shader_param/force = 0.01
shader_param/size = 0.5
shader_param/thickness = 0.11
shader_param/offset = 0.5

[sub_resource type="Shader" id=20]
code = "shader_type canvas_item;

uniform vec2 frame_coords = vec2(0.0,0.0);
uniform vec2 nb_frames = vec2(0.0,0.0);
uniform vec2 velocity = vec2(0.0,0.0);
uniform float velocity_max = 300.0;
uniform float trail_size = 6.0;
uniform float alpha_start = 0.8;
uniform float alpha_tail = 0.2;
uniform float alpha_factor = 1.2;
uniform float noise_margin = 0.68;
uniform sampler2D noise;


vec2 get_mid_uv(vec2 coords, vec2 px_size) {
	// récupérer les UV des milieux de ces px en partant du dernier
	float px_mid_x = 1.0 - px_size.x / 2.0;
	float px_mid_y = 1.0 - px_size.y / 2.0;
	if (coords.x < 1.0)
		px_mid_x = px_size.x * ( floor(coords.x / px_size.x) + 1.0 / 2.0 );
	if (coords.y < 1.0)
		px_mid_y = px_size.y * ( floor(coords.y / px_size.y) + 1.0 / 2.0 ); 
	return vec2(px_mid_x, px_mid_y);
}

void fragment() {
	COLOR = texture(TEXTURE,UV);

	float UV_X = (UV.x * nb_frames.x - frame_coords.x);
	float UV_Y = (UV.y * nb_frames.y - frame_coords.y);
	vec2 uv = vec2(UV_X, UV_Y);
	
	// Limite velocity à trail_size pixels max 
	vec2 v_dir = normalize(velocity);
	float v_length = length(velocity) * trail_size / velocity_max;
	
	float alpha_step = (alpha_start - alpha_tail) / trail_size;
	float alpha = alpha_tail;
	while (v_length > 0.0) {
		vec2 velo = v_length * v_dir * TEXTURE_PIXEL_SIZE;
		vec2 px_mid_uv = get_mid_uv(UV, TEXTURE_PIXEL_SIZE) + velo;
		float noiseValue = texture(noise, px_mid_uv).r;
		vec4 new_color = texture(TEXTURE, px_mid_uv);
		if (noiseValue > noise_margin && new_color.a > 0.0) {
			if (COLOR.a == 0.0) {
				COLOR = new_color;
				COLOR.a = new_color.a * alpha;
			}
			break;
		}
		v_length -= 0.5;
		alpha *= alpha_factor;
		alpha = min(alpha,alpha_start);
	}
}"

[sub_resource type="OpenSimplexNoise" id=21]
resource_local_to_scene = true
seed = 6
octaves = 8
period = 61.2

[sub_resource type="NoiseTexture" id=22]
seamless = true
noise = SubResource( 21 )

[sub_resource type="ShaderMaterial" id=23]
shader = SubResource( 20 )
shader_param/frame_coords = Vector2( 3, 3 )
shader_param/nb_frames = Vector2( 3, 3 )
shader_param/velocity = Vector2( 2, 2 )
shader_param/velocity_max = 300.0
shader_param/trail_size = 6.0
shader_param/alpha_start = 0.8
shader_param/alpha_tail = 0.2
shader_param/alpha_factor = 1.2
shader_param/noise_margin = 0.68
shader_param/noise = SubResource( 22 )

[node name="Node2D" type="Node2D"]
script = ExtResource( 3 )

[node name="ChangeColor" type="Sprite" parent="."]
visible = false
material = SubResource( 2 )
position = Vector2( 290, 200 )
scale = Vector2( 10.0625, 7.25 )
texture = ExtResource( 1 )

[node name="FlashSprite" type="Sprite" parent="."]
visible = false
material = SubResource( 4 )
position = Vector2( -474, 240 )
scale = Vector2( 5.90625, 6.0625 )
texture = ExtResource( 1 )

[node name="ReverseColor" type="Sprite" parent="."]
visible = false
material = SubResource( 6 )
position = Vector2( 1904.5, 560 )
scale = Vector2( 11.8594, 6.125 )
texture = ExtResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
visible = false
material = SubResource( 12 )
position = Vector2( -1262.5, 642 )
scale = Vector2( 22.5684, 16.0508 )
texture = SubResource( 14 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "Pulse"
"anims/New Anim" = SubResource( 19 )
anims/Pulse = SubResource( 15 )
anims/RESET = SubResource( 16 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Shockwave" type="Sprite" parent="CanvasLayer"]
visible = false
material = SubResource( 18 )
position = Vector2( -121.5, 10.5001 )
scale = Vector2( 64.4844, 40.3594 )
texture = ExtResource( 1 )

[node name="Sprite2" type="Sprite" parent="."]
material = SubResource( 23 )
position = Vector2( 600, 270 )
scale = Vector2( 4.1875, 4.26562 )
texture = ExtResource( 1 )
script = ExtResource( 2 )
