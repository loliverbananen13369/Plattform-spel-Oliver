[gd_scene load_steps=46 format=2]

[ext_resource path="res://Scripts/AssassinDashAttack.gd" type="Script" id=1]
[ext_resource path="res://Battle VFX Slashes N Thrusts/Thrusts VFX/Thrust 03/Thrust VFX 03 Color 1.png" type="Texture" id=2]
[ext_resource path="res://Battle VFX Slashes N Thrusts/Thrusts VFX/Thrust 05/Thrust VFX 05 Color 1.png" type="Texture" id=3]
[ext_resource path="res://Random_Effects/Sangoro/IMPACT 1.png" type="Texture" id=4]
[ext_resource path="res://Random_Effects/Sangoro/Hslash1.png" type="Texture" id=5]
[ext_resource path="res://Random_Effects/Sangoro/BigSlashV.png" type="Texture" id=6]

[sub_resource type="Shader" id=38]
code = "shader_type canvas_item;

uniform float max_line_width = 10.0;
uniform float min_line_width = 5.0;
uniform float freq = 1.0;
uniform float block_size = 20.0;
uniform vec4 starting_colour = vec4(0,0,0,1);
uniform vec4 ending_colour = vec4(1);

const float pi = 3.1415;
const int ang_res = 16;
const int grad_res = 8;

float hash(vec2 p, float s) {
	return fract(35.1 * sin(dot(vec3(112.3, 459.2, 753.2), vec3(p, s))));
}

float noise(vec2 p, float s) {
	vec2 d = vec2(0, 1);
	vec2 b = floor(p);
	vec2 f = fract(p);
	return mix(
		mix(hash(b + d.xx, s), hash(b + d.yx, s), f.x),
		mix(hash(b + d.xy, s), hash(b + d.yy, s), f.x), f.y);
}

float getLineWidth(vec2 p, float s) {
	p /= block_size;
	float w = 0.0;
	float intensity = 1.0;
	for (int i = 0; i < 3; i++) {
		w = mix(w, noise(p, s), intensity);
		p /= 2.0;
		intensity /= 2.0;
	}
	
	return mix(max_line_width, min_line_width, w);
}

bool pixelInRange(sampler2D text, vec2 uv, vec2 dist) {
	float alpha = 0.0;
	for (int i = 0; i < ang_res; i++) {
		float angle = 2.0 * pi * float(i) / float(ang_res);
		vec2 disp = dist * vec2(cos(angle), sin(angle));
		if (texture(text, uv + disp).a > 0.0) return true;
	}
	return false;
}

float getClosestDistance(sampler2D text, vec2 uv, vec2 maxDist) {
	if (!pixelInRange(text, uv, maxDist)) return -1.0;
	
	float hi = 1.0; float lo = 0.0;
	
	for (int i = 1; i <= grad_res; i++) {
		float curr = (hi + lo) / 2.0;
		if (pixelInRange(text, uv, curr * maxDist)) {
			hi = curr;
		}
		else {
			lo = curr;
		}
	}
	return hi;
	
}

void fragment() {
	float timeStep = floor(freq * TIME);
	vec2 scaledDist = TEXTURE_PIXEL_SIZE;
	scaledDist *= getLineWidth(UV / TEXTURE_PIXEL_SIZE, timeStep);
	float w = getClosestDistance(TEXTURE, UV, scaledDist);
	
	if (( w > 0.0) && (texture(TEXTURE, UV).a < 0.2)) {
		COLOR = mix(starting_colour, ending_colour, tanh(3.0*w));
	}
	else {
		COLOR = texture(TEXTURE, UV);
	}
	
}"

[sub_resource type="ShaderMaterial" id=39]
shader = SubResource( 38 )
shader_param/max_line_width = 0.3
shader_param/min_line_width = 0.1
shader_param/freq = 1.0
shader_param/block_size = 0.5
shader_param/starting_colour = Plane( 2, 1, 1, 1 )
shader_param/ending_colour = Plane( 3, 3, 3, 1 )

[sub_resource type="AtlasTexture" id=17]
atlas = ExtResource( 5 )
region = Rect2( 0, 0, 64, 32 )

[sub_resource type="AtlasTexture" id=18]
atlas = ExtResource( 5 )
region = Rect2( 64, 0, 64, 32 )

[sub_resource type="AtlasTexture" id=19]
atlas = ExtResource( 5 )
region = Rect2( 128, 0, 64, 32 )

[sub_resource type="AtlasTexture" id=20]
atlas = ExtResource( 5 )
region = Rect2( 192, 0, 64, 32 )

[sub_resource type="AtlasTexture" id=21]
atlas = ExtResource( 5 )
region = Rect2( 256, 0, 64, 32 )

[sub_resource type="AtlasTexture" id=22]
atlas = ExtResource( 6 )
region = Rect2( 0, 0, 64, 48 )

[sub_resource type="AtlasTexture" id=23]
atlas = ExtResource( 6 )
region = Rect2( 64, 0, 64, 48 )

[sub_resource type="AtlasTexture" id=24]
atlas = ExtResource( 6 )
region = Rect2( 128, 0, 64, 48 )

[sub_resource type="AtlasTexture" id=25]
atlas = ExtResource( 6 )
region = Rect2( 192, 0, 64, 48 )

[sub_resource type="AtlasTexture" id=26]
atlas = ExtResource( 6 )
region = Rect2( 256, 0, 64, 48 )

[sub_resource type="AtlasTexture" id=28]
atlas = ExtResource( 4 )
region = Rect2( 0, 0, 106, 44 )

[sub_resource type="AtlasTexture" id=29]
atlas = ExtResource( 4 )
region = Rect2( 106, 0, 106, 44 )

[sub_resource type="AtlasTexture" id=30]
atlas = ExtResource( 4 )
region = Rect2( 212, 0, 106, 44 )

[sub_resource type="AtlasTexture" id=31]
atlas = ExtResource( 4 )
region = Rect2( 318, 0, 106, 44 )

[sub_resource type="AtlasTexture" id=32]
atlas = ExtResource( 4 )
region = Rect2( 424, 0, 106, 44 )

[sub_resource type="AtlasTexture" id=33]
atlas = ExtResource( 4 )
region = Rect2( 530, 0, 106, 44 )

[sub_resource type="AtlasTexture" id=34]
atlas = ExtResource( 4 )
region = Rect2( 636, 0, 106, 44 )

[sub_resource type="AtlasTexture" id=35]
atlas = ExtResource( 4 )
region = Rect2( 742, 0, 106, 44 )

[sub_resource type="AtlasTexture" id=36]
atlas = ExtResource( 4 )
region = Rect2( 848, 0, 106, 44 )

[sub_resource type="AtlasTexture" id=37]
atlas = ExtResource( 4 )
region = Rect2( 954, 0, 106, 44 )

[sub_resource type="AtlasTexture" id=1]
atlas = ExtResource( 2 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=2]
atlas = ExtResource( 2 )
region = Rect2( 48, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=3]
atlas = ExtResource( 2 )
region = Rect2( 96, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 2 )
region = Rect2( 144, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 2 )
region = Rect2( 192, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 2 )
region = Rect2( 240, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=7]
atlas = ExtResource( 2 )
region = Rect2( 288, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=8]
atlas = ExtResource( 3 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=9]
atlas = ExtResource( 3 )
region = Rect2( 48, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=10]
atlas = ExtResource( 3 )
region = Rect2( 96, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=11]
atlas = ExtResource( 3 )
region = Rect2( 144, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=12]
atlas = ExtResource( 3 )
region = Rect2( 192, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=13]
atlas = ExtResource( 3 )
region = Rect2( 240, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=14]
atlas = ExtResource( 3 )
region = Rect2( 288, 0, 48, 48 )

[sub_resource type="SpriteFrames" id=15]
animations = [ {
"frames": [ SubResource( 17 ), SubResource( 18 ), SubResource( 19 ), SubResource( 20 ), SubResource( 21 ), SubResource( 22 ), SubResource( 23 ), SubResource( 24 ), SubResource( 25 ), SubResource( 26 ), SubResource( 28 ), SubResource( 29 ), SubResource( 30 ), SubResource( 31 ), SubResource( 32 ), SubResource( 33 ), SubResource( 34 ), SubResource( 35 ), SubResource( 36 ), SubResource( 37 ) ],
"loop": true,
"name": "New Anim",
"speed": 30.0
}, {
"frames": [  ],
"loop": true,
"name": "New Anim 1",
"speed": 5.0
}, {
"frames": [ SubResource( 1 ), SubResource( 2 ), SubResource( 3 ), SubResource( 4 ), SubResource( 5 ), SubResource( 6 ), SubResource( 7 ) ],
"loop": false,
"name": "Thrust3",
"speed": 15.0
}, {
"frames": [ SubResource( 8 ), SubResource( 9 ), SubResource( 10 ), SubResource( 11 ), SubResource( 12 ), SubResource( 13 ), SubResource( 14 ) ],
"loop": true,
"name": "Thrust5",
"speed": 15.0
} ]

[sub_resource type="RectangleShape2D" id=16]
extents = Vector2( 22, 12.125 )

[sub_resource type="Animation" id=27]
resource_name = "New Anim"
length = 0.333333
step = 0.0333333
tracks/0/type = "value"
tracks/0/path = NodePath(".:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "New Anim" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.0333333, 0.0666667, 0.1, 0.133333, 0.166667, 0.2, 0.233333, 0.266667, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
}

[node name="AssassinDashAttack" type="AnimatedSprite"]
modulate = Color( 0.0705882, 0, 0.0509804, 1 )
material = SubResource( 39 )
position = Vector2( 35.5, 14.5 )
scale = Vector2( 4, 2 )
frames = SubResource( 15 )
animation = "New Anim"
frame = 6
script = ExtResource( 1 )

[node name="Area2D" type="Area2D" parent="." groups=["DashAttack"]]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2( 0.625, -2.125 )
shape = SubResource( 16 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "New Anim"
"anims/New Anim" = SubResource( 27 )

[connection signal="animation_finished" from="." to="." method="_on_AssassinDashAttack_animation_finished"]
[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
