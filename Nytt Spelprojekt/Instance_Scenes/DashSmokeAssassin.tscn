[gd_scene load_steps=49 format=2]

[ext_resource path="res://Random_Effects/Sangoro/DASH SMOKE 2.ass.png" type="Texture" id=1]
[ext_resource path="res://InstanceScripts/DashSmokeAssassin.gd" type="Script" id=2]
[ext_resource path="res://Random_Effects/Sangoro/DASH SMOKE 2.png" type="Texture" id=3]
[ext_resource path="res://Battle VFX Slashes N Thrusts/Thrusts VFX/Thrust 01/Thrust VFX 01 Color 1.newass1.png" type="Texture" id=4]
[ext_resource path="res://Battle VFX Slashes N Thrusts/Thrusts VFX/Thrust 01/Thrust VFX 01 Color 1.test1.png" type="Texture" id=5]
[ext_resource path="res://Battle VFX Slashes N Thrusts/Thrusts VFX/Thrust 01/Thrust VFX 01 Color 1.newass2.png" type="Texture" id=6]

[sub_resource type="Shader" id=68]
code = "shader_type canvas_item;

uniform float max_line_width = 10.0;
uniform float min_line_width = 5.0;
uniform float freq = 1.0;
uniform float block_size = 20.0;
uniform vec4 starting_colour = vec4(0,0,0,1);
uniform vec4 ending_colour = vec4(1);

const float pi = 3.1415;
const int ang_res = 16;
const int grad_res = 8;

float hash(vec2 p, float s) {
	return fract(35.1 * sin(dot(vec3(112.3, 459.2, 753.2), vec3(p, s))));
}

float noise(vec2 p, float s) {
	vec2 d = vec2(0, 1);
	vec2 b = floor(p);
	vec2 f = fract(p);
	return mix(
		mix(hash(b + d.xx, s), hash(b + d.yx, s), f.x),
		mix(hash(b + d.xy, s), hash(b + d.yy, s), f.x), f.y);
}

float getLineWidth(vec2 p, float s) {
	p /= block_size;
	float w = 0.0;
	float intensity = 1.0;
	for (int i = 0; i < 3; i++) {
		w = mix(w, noise(p, s), intensity);
		p /= 2.0;
		intensity /= 2.0;
	}
	
	return mix(max_line_width, min_line_width, w);
}

bool pixelInRange(sampler2D text, vec2 uv, vec2 dist) {
	float alpha = 0.0;
	for (int i = 0; i < ang_res; i++) {
		float angle = 2.0 * pi * float(i) / float(ang_res);
		vec2 disp = dist * vec2(cos(angle), sin(angle));
		if (texture(text, uv + disp).a > 0.0) return true;
	}
	return false;
}

float getClosestDistance(sampler2D text, vec2 uv, vec2 maxDist) {
	if (!pixelInRange(text, uv, maxDist)) return -1.0;
	
	float hi = 1.0; float lo = 0.0;
	
	for (int i = 1; i <= grad_res; i++) {
		float curr = (hi + lo) / 2.0;
		if (pixelInRange(text, uv, curr * maxDist)) {
			hi = curr;
		}
		else {
			lo = curr;
		}
	}
	return hi;
	
}

void fragment() {
	float timeStep = floor(freq * TIME);
	vec2 scaledDist = TEXTURE_PIXEL_SIZE;
	scaledDist *= getLineWidth(UV / TEXTURE_PIXEL_SIZE, timeStep);
	float w = getClosestDistance(TEXTURE, UV, scaledDist);
	
	if (( w > 0.0) && (texture(TEXTURE, UV).a < 0.2)) {
		COLOR = mix(starting_colour, ending_colour, tanh(3.0*w));
	}
	else {
		COLOR = texture(TEXTURE, UV);
	}
	
}"

[sub_resource type="ShaderMaterial" id=69]
resource_local_to_scene = true
shader = SubResource( 68 )
shader_param/max_line_width = 0.3
shader_param/min_line_width = 0.1
shader_param/freq = 1.0
shader_param/block_size = 0.5
shader_param/starting_colour = Plane( 2, 1, 1, 1 )
shader_param/ending_colour = Plane( 3, 3, 3, 1 )

[sub_resource type="AtlasTexture" id=38]
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 59, 42 )

[sub_resource type="AtlasTexture" id=39]
atlas = ExtResource( 1 )
region = Rect2( 59, 0, 59, 42 )

[sub_resource type="AtlasTexture" id=40]
atlas = ExtResource( 1 )
region = Rect2( 118, 0, 59, 42 )

[sub_resource type="AtlasTexture" id=41]
atlas = ExtResource( 1 )
region = Rect2( 177, 0, 59, 42 )

[sub_resource type="AtlasTexture" id=42]
atlas = ExtResource( 1 )
region = Rect2( 236, 0, 59, 42 )

[sub_resource type="AtlasTexture" id=43]
atlas = ExtResource( 1 )
region = Rect2( 295, 0, 59, 42 )

[sub_resource type="AtlasTexture" id=44]
atlas = ExtResource( 1 )
region = Rect2( 354, 0, 59, 42 )

[sub_resource type="AtlasTexture" id=28]
atlas = ExtResource( 3 )
region = Rect2( 0, 0, 59, 42 )

[sub_resource type="AtlasTexture" id=29]
atlas = ExtResource( 3 )
region = Rect2( 59, 0, 59, 42 )

[sub_resource type="AtlasTexture" id=30]
atlas = ExtResource( 3 )
region = Rect2( 118, 0, 59, 42 )

[sub_resource type="AtlasTexture" id=31]
atlas = ExtResource( 3 )
region = Rect2( 177, 0, 59, 42 )

[sub_resource type="AtlasTexture" id=32]
atlas = ExtResource( 3 )
region = Rect2( 236, 0, 59, 42 )

[sub_resource type="AtlasTexture" id=33]
atlas = ExtResource( 3 )
region = Rect2( 295, 0, 59, 42 )

[sub_resource type="AtlasTexture" id=34]
atlas = ExtResource( 3 )
region = Rect2( 354, 0, 59, 42 )

[sub_resource type="AtlasTexture" id=52]
atlas = ExtResource( 4 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=53]
atlas = ExtResource( 4 )
region = Rect2( 48, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=54]
atlas = ExtResource( 4 )
region = Rect2( 96, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=55]
atlas = ExtResource( 4 )
region = Rect2( 144, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=56]
atlas = ExtResource( 4 )
region = Rect2( 192, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=57]
atlas = ExtResource( 4 )
region = Rect2( 240, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=58]
atlas = ExtResource( 4 )
region = Rect2( 288, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=45]
atlas = ExtResource( 5 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=46]
atlas = ExtResource( 5 )
region = Rect2( 48, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=47]
atlas = ExtResource( 5 )
region = Rect2( 96, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=48]
atlas = ExtResource( 5 )
region = Rect2( 144, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=49]
atlas = ExtResource( 5 )
region = Rect2( 192, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=50]
atlas = ExtResource( 5 )
region = Rect2( 240, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=51]
atlas = ExtResource( 5 )
region = Rect2( 288, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=60]
atlas = ExtResource( 6 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=61]
atlas = ExtResource( 6 )
region = Rect2( 48, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=62]
atlas = ExtResource( 6 )
region = Rect2( 96, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=63]
atlas = ExtResource( 6 )
region = Rect2( 144, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=64]
atlas = ExtResource( 6 )
region = Rect2( 192, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=65]
atlas = ExtResource( 6 )
region = Rect2( 240, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=66]
atlas = ExtResource( 6 )
region = Rect2( 288, 0, 48, 48 )

[sub_resource type="SpriteFrames" id=5]
resource_local_to_scene = true
animations = [ {
"frames": [ SubResource( 38 ), SubResource( 39 ), SubResource( 40 ), SubResource( 41 ), SubResource( 42 ), SubResource( 43 ), SubResource( 44 ) ],
"loop": false,
"name": "ImpactDustKick",
"speed": 25.0
}, {
"frames": [ SubResource( 28 ), SubResource( 29 ), SubResource( 30 ), SubResource( 31 ), SubResource( 32 ), SubResource( 33 ), SubResource( 34 ) ],
"loop": false,
"name": "ImpactDustKickMage",
"speed": 25.0
}, {
"frames": [ SubResource( 52 ), SubResource( 53 ), SubResource( 54 ), SubResource( 55 ), SubResource( 56 ), SubResource( 57 ), SubResource( 58 ) ],
"loop": false,
"name": "New Anim",
"speed": 15.0
}, {
"frames": [ SubResource( 45 ), SubResource( 46 ), SubResource( 47 ), SubResource( 48 ), SubResource( 49 ), SubResource( 50 ), SubResource( 51 ) ],
"loop": false,
"name": "New Anim 1",
"speed": 15.0
}, {
"frames": [ SubResource( 60 ), SubResource( 61 ), SubResource( 62 ), SubResource( 63 ), SubResource( 64 ), SubResource( 65 ), SubResource( 66 ) ],
"loop": true,
"name": "New Anim 2",
"speed": 5.0
} ]

[sub_resource type="Animation" id=59]
resource_name = "Hejsan"
length = 0.466667
step = 0.0666667
tracks/0/type = "value"
tracks/0/path = NodePath(".:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "New Anim" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.0666667, 0.133333, 0.2, 0.266667, 0.333333, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.2 ]
}

[sub_resource type="Animation" id=67]
resource_name = "Hejsan2"
length = 0.466667
step = 0.0666667
tracks/0/type = "value"
tracks/0/path = NodePath(".:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "New Anim 2" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.0666667, 0.133333, 0.2, 0.266667, 0.333333, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.2 ]
}

[sub_resource type="Animation" id=36]
resource_name = "ImpactDustKick"
length = 0.7
tracks/0/type = "value"
tracks/0/path = NodePath(".:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "ImpactDustKick" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.7 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.4 ]
}

[sub_resource type="Animation" id=37]
resource_name = "New Anim 1"
length = 0.466667
step = 0.0666667
tracks/0/type = "value"
tracks/0/path = NodePath(".:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "New Anim 1" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.0666667, 0.133333, 0.2, 0.266667, 0.333333, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.2 ]
}

[node name="AnimatedSprite" type="AnimatedSprite"]
modulate = Color( 0.0705882, 0, 0.0509804, 1 )
material = SubResource( 69 )
frames = SubResource( 5 )
animation = "New Anim"
script = ExtResource( 2 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Hejsan = SubResource( 59 )
anims/Hejsan2 = SubResource( 67 )
anims/ImpactDustKick = SubResource( 36 )
"anims/New Anim 1" = SubResource( 37 )

[connection signal="animation_finished" from="." to="." method="_on_AnimatedSprite_animation_finished"]
[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
